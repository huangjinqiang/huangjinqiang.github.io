(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{380:function(t,e,a){"use strict";a.r(e);var s=a(23),v=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"对抗阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对抗阶段"}},[t._v("#")]),t._v(" 对抗阶段")]),t._v(" "),a("p",[t._v("先尝试入门题目，先给投票算法做好前置理解")]),t._v(" "),a("blockquote",[a("p",[a("RouterLink",{attrs:{to:"/leetcode/top-interview-questions/xm77tm/"}},[t._v("多数元素")])],1)]),t._v(" "),a("p",[t._v("此题限制了一定存在lucky dog，导致代码只使用了投票算法的"),a("b",[t._v("对抗阶段")]),t._v("，就能解出期望结果")]),t._v(" "),a("h2",{attrs:{id:"计数阶段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#计数阶段"}},[t._v("#")]),t._v(" 计数阶段")]),t._v(" "),a("p",[t._v("如果题目没限制呢，最后存活的candidate就不一定是lucky dog了，那咋办嘛")]),t._v(" "),a("p",[t._v("引入投票算法的"),a("b",[t._v("计数阶段")])]),t._v(" "),a("p",[t._v("再遍历一次，统计下这个candidate次数是否真的超过一半就行啦")]),t._v(" "),a("p",[t._v("俩次遍历，时间复杂度也还是O(n)")]),t._v(" "),a("h2",{attrs:{id:"扩展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#扩展"}},[t._v("#")]),t._v(" 扩展")]),t._v(" "),a("p",[t._v("假设现在要找 票数超过 n/3 的candidate")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"/leetcode/229"}},[t._v("多数元素II")])])]),t._v(" "),a("p",[t._v("扩展到 n/m 的场景，使用数组来存储candidates和counts，对抗+计数俩个阶段逻辑一样")])])}),[],!1,null,null,null);e.default=v.exports}}]);